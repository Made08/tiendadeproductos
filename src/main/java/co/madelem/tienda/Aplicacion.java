package co.madelem.tienda;

import co.madelem.tienda.dominio.Usuario;
import co.madelem.tienda.dominio.Producto;
import co.madelem.tienda.dominio.Compra;

import co.madelem.tienda.logica.RecomendadorHistorialCompras;
import co.madelem.tienda.logica.RecomendadorPreferenciasUsuario;
import co.madelem.tienda.logica.RecomendadorTendenciasMercado;

import co.madelem.tienda.patrones.FachadaRecomendacion;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

public class Aplicacion {
    public static void main(String[] args) {
        System.out.println("+-----------------------------------------------------------+");
        System.out.println("| üìù Validacion Patrones de Dise√±o, UCC 2024                 |");
        System.out.println("| üë©üèª Madelem Chico Velasco, Ingeniera de Sistemas            |");
        System.out.println("+------------------------------------------------------------+");
        System.out.println("| üîî Caso 3: Sistema de Tienda para Venta de Productos       |");
        System.out.println("+------------------------------------------------------------+");

        System.out.println("üî•Inicio Ejecucion: Sistema de Tienda\n");

        Usuario usuario = new Usuario("Juan Perez");
        usuario.setCategoriaPreferida("Categor√≠a 1");
        List<Producto> productos = obtenerProductosDisponibles();
        
        System.out.println("\n");
        System.out.println("üõíProductos en Stock");
        productos.forEach(producto -> System.out.println(producto));

        FachadaRecomendacion fachadaRecomendacion = new FachadaRecomendacion();
        
        List<Producto> productosRecomendados = fachadaRecomendacion.obtenerRecomendaciones("historial", usuario, productos);
        
        // Mostrar productos recomendados
        productosRecomendados.forEach(producto -> System.out.println(producto.getNombre()));
    }
    
    private static List<Producto> obtenerProductosDisponibles() {
        // Retorna la lista de productos disponibles
        return Arrays.asList(
                new Producto("Producto 1", "Categor√≠a 1"),
                new Producto("Producto 2", "Categor√≠a 2"),
                new Producto("Lampara", "Categor√≠a 1"),
                new Producto("Jabon de Aseo NEKO", "Categor√≠a 1"),
                new Producto("Frijol Verde", "Categor√≠a 1")
        );
    }
}